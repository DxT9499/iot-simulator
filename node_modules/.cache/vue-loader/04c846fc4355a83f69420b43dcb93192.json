{"remainingRequest":"/home/dxt/code/iot-simulator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dxt/code/iot-simulator/src/components/DeviceOnMap.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dxt/code/iot-simulator/src/components/DeviceOnMap.vue","mtime":1622128423528},{"path":"/home/dxt/code/iot-simulator/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNkcmFnZ2FibGUtZGV2aWNlIHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXotaW5kZXg6IDk7Cgl3aWR0aDogMTAwcHg7CgloZWlnaHQ6IDEwMHB4Owp9CiNkcmFnZ2FibGUtZGV2aWNlLWhlYWRlciB7Cgl6LWluZGV4OiAxMDsKfQojZHJhZ2dhYmxlLWRldmljZSAjZHJhZ2dhYmxlLWRldmljZS1oZWFkZXIgaW1nIHsKCXBvc2l0aW9uOiByZWxhdGl2ZTsKCWRpc3BsYXk6IGJsb2NrOwoJbWFyZ2luLWxlZnQ6IGF1dG87CgltYXJnaW4tcmlnaHQ6IGF1dG87CgltYXJnaW4tdG9wOiAxMHB4OwoJbWFyZ2luLWJvdHRvbTogMTBweDsKCXdpZHRoOiA1MHB4OwoJaGVpZ2h0OiA1MHB4Owp9CiNkcmFnZ2FibGUtZGV2aWNlICNkcmFnZ2FibGUtZGV2aWNlLWhlYWRlciAubmFtZSB7CgltYXJnaW4tdG9wOiAycHg7CglkaXNwbGF5OiBibG9jazsKCXRleHQtYWxpZ246IGNlbnRlcjsKCWNvbG9yOiBibGFjazsKfQouYnV0dG9uLXRvZ2dsZSB7Cglwb3NpdGlvbjogYWJzb2x1dGU7Cglib3JkZXI6IG5vbmU7Cgljb2xvcjogd2hpdGU7CgloZWlnaHQ6IDI1cHg7Cgl3aWR0aDogNTBweDsKCWJvcmRlci1yYWRpdXM6IDVweDsKCW1hcmdpbi10b3A6IC03NXB4OwoJbWFyZ2luLWxlZnQ6IDUwcHg7CgliYWNrZ3JvdW5kLWNvbG9yOiAjQzMyMTEwOwp9Ci5idXR0b24tdG9nZ2xlLnRvZ2dsZWQgewoJYmFja2dyb3VuZC1jb2xvcjogIzNBOTkyQjsKfQoKCg=="},{"version":3,"sources":["DeviceOnMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeviceOnMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div ref=\"draggableContainer\" id=\"draggable-device\" :style=\"style\">\n\t\t<div\n\t\t\tid=\"draggable-device-header\"\n\t\t\t@mousedown=\"dragMouseDown\"\n\t\t\tv-on:dblclick=\"isShow = !isShow\"\n\t\t>\n\t\t\t<img :src=\"require(`../assets/iot-devices/${pic_url}`)\" />\n\t\t\t<span class=\"name\">{{ name }}</span>\n\t\t</div>\n\t\t<MiniMenu\n\t\t\tv-if=\"isShow\"\n\t\t\tv-bind:name.sync=\"name\"\n\t\t\tv-bind:label.sync=\"label\"\n\t\t\tv-bind:type.sync=\"type\"\n\t\t\tv-bind:tag.sync=\"tag\"\n\t\t\t@deviceInfor=\"handleEventSubmit\"\n\t\t\t@deleteDevice=\"handleEventDelete\"\n\t\t></MiniMenu>\n\t\t<button class=\"button-toggle\" :class= \"{toggled: isToggled}\" v-if=\"isToggleShow\" @click= \"isToggled = !isToggled\">{{isToggled ? 'ON' : 'OFF'}}</button>\n\t</div>\n</template>\n<script>\nimport {HTTP} from './http-common'\nimport MiniMenu from './MiniMenu.vue'\nexport default {\n\tname: \"DraggableDiv\",\n\tprops: {\n\t\tpic_url: String,\n\t\tstatus: Boolean,\n\t\tpositionX: String,\n\t\tpositionY: String,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisShow: false,\n\t\t\tisToggleShow: false,\n\t\t\tisToggled: false,\n\t\t\tname: \"\",\n\t\t\tlabel: \"\",\n\t\t\ttype: \"\",\n\t\t\ttag: \"\",\n\t\t\tpositions: {\n\t\t\t\tclientX: undefined,\n\t\t\t\tclientY: undefined,\n\t\t\t\tmovementX: 0,\n\t\t\t\tmovementY: 0,\n\t\t\t},\n\t\t};\n\t},\n\tcomponents: {\n\t\tMiniMenu,\n\t},\n\tcomputed: {\n\t\tstyle() {\n\t\t\treturn {\n\t\t\t\tleft: this.positionX,\n\t\t\t\ttop: this.positionY,\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tdragMouseDown: function(event) {\n\t\t\tevent.preventDefault();\n\t\t\t// get the mouse cursor position at startup:\n\t\t\tthis.positions.clientX = event.clientX;\n\t\t\tthis.positions.clientY = event.clientY;\n\t\t\tdocument.onmousemove = this.elementDrag;\n\t\t\tdocument.onmouseup = this.closeDragElement;\n\t\t},\n\t\telementDrag: function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.positions.movementX = this.positions.clientX - event.clientX;\n\t\t\tthis.positions.movementY = this.positions.clientY - event.clientY;\n\t\t\tthis.positions.clientX = event.clientX;\n\t\t\tthis.positions.clientY = event.clientY;\n\t\t\t// set the element's new position:\n\t\t\tthis.$refs.draggableContainer.style.top =\n\t\t\t\tthis.$refs.draggableContainer.offsetTop -\n\t\t\t\tthis.positions.movementY +\n\t\t\t\t\"px\";\n\t\t\tthis.$refs.draggableContainer.style.left =\n\t\t\t\tthis.$refs.draggableContainer.offsetLeft -\n\t\t\t\tthis.positions.movementX +\n\t\t\t\t\"px\";\n\t\t},\n\t\tcloseDragElement() {\n\t\t\tdocument.onmouseup = null;\n\t\t\tdocument.onmousemove = null;\n\t\t},\n\t\thandleEventDelete: function() {\n\t\t\tthis.$emit(\"remove\");\n\t\t},\n\t\thandleEventSubmit: function(name, label, type, tag) {\n\t\t\tthis.name = name\n\t\t\tthis.label = label\n\t\t\tthis.type = type\n\t\t\tthis.tag = tag\n\t\t\tif(type == 'Switch') this.isToggleShow = true\n\t\t\tthis.fetchData()\n\t\t},\n\t\tasync fetchData() {\n\t\t\tconst url = `items/` + this.name + `/state`\n\t\t\twhile (url != ''){\n\t\t\t\tHTTP.get(url,{headers:{'Content-Type': 'text/plain'}}).then(response=>{\n\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t})\n\t\t\t}\n\n\t\t}\n\t},\n};\n</script>\n\n<style>\n#draggable-device {\n\tposition: absolute;\n\tz-index: 9;\n\twidth: 100px;\n\theight: 100px;\n}\n#draggable-device-header {\n\tz-index: 10;\n}\n#draggable-device #draggable-device-header img {\n\tposition: relative;\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 10px;\n\tmargin-bottom: 10px;\n\twidth: 50px;\n\theight: 50px;\n}\n#draggable-device #draggable-device-header .name {\n\tmargin-top: 2px;\n\tdisplay: block;\n\ttext-align: center;\n\tcolor: black;\n}\n.button-toggle {\n\tposition: absolute;\n\tborder: none;\n\tcolor: white;\n\theight: 25px;\n\twidth: 50px;\n\tborder-radius: 5px;\n\tmargin-top: -75px;\n\tmargin-left: 50px;\n\tbackground-color: #C32110;\n}\n.button-toggle.toggled {\n\tbackground-color: #3A992B;\n}\n\n\n</style>\n"]}]}