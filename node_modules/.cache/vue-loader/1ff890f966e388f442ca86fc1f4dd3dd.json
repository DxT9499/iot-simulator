{"remainingRequest":"/home/dxt/code/iot-simulator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dxt/code/iot-simulator/src/components/DeviceOnMap.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dxt/code/iot-simulator/src/components/DeviceOnMap.vue","mtime":1623956767605},{"path":"/home/dxt/code/iot-simulator/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dxt/code/iot-simulator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2RyYWdnYWJsZS1kZXZpY2UgewoJcG9zaXRpb246IGFic29sdXRlOwoJei1pbmRleDogOTsKCXdpZHRoOiAxMDBweDsKCWhlaWdodDogMTAwcHg7CgkKfQojZHJhZ2dhYmxlLWRldmljZS1oZWFkZXIgewoJbWFyZ2luLWxlZnQ6IGF1dG87CgltYXJnaW4tcmlnaHQ6IGF1dG87Cgl3aWR0aDogNzVweDsKCWhlaWdodDogNzVweDsKCWJhY2tncm91bmQtY29sb3I6IHJnYig5NiwxOTQsMTE5LDAuNzUpOwoJYm9yZGVyLXJhZGl1czogNTAlOwoJei1pbmRleDogMTA7Cn0KI2RyYWdnYWJsZS1kZXZpY2UgI2RyYWdnYWJsZS1kZXZpY2UtaGVhZGVyIGltZyB7Cglwb3NpdGlvbjogcmVsYXRpdmU7CglkaXNwbGF5OiBibG9jazsKCW1hcmdpbi1sZWZ0OiBhdXRvOwoJbWFyZ2luLXJpZ2h0OiBhdXRvOwoJbWFyZ2luLXRvcDogMTBweDsKCW1hcmdpbi1ib3R0b206IDEwcHg7Cgl3aWR0aDogNTBweDsKCWhlaWdodDogNTBweDsKCXBhZGRpbmctdG9wOiAxMnB4Owp9CiNkcmFnZ2FibGUtZGV2aWNlICNkcmFnZ2FibGUtZGV2aWNlLWhlYWRlciAubmFtZSB7CgltYXJnaW4tdG9wOiAycHg7CglkaXNwbGF5OiBibG9jazsKCXRleHQtYWxpZ246IGNlbnRlcjsKCWNvbG9yOiBibGFjazsKfQouYnV0dG9uLXRvZ2dsZSB7Cglwb3NpdGlvbjogYWJzb2x1dGU7Cglib3JkZXI6IG5vbmU7Cgljb2xvcjogd2hpdGU7CgloZWlnaHQ6IDI1cHg7Cgl3aWR0aDogNTBweDsKCWJvcmRlci1yYWRpdXM6IDVweDsKCW1hcmdpbi10b3A6IC03NXB4OwoJbWFyZ2luLWxlZnQ6IDUwcHg7CgliYWNrZ3JvdW5kLWNvbG9yOiAjQzMyMTEwOwp9Ci5idXR0b24tdG9nZ2xlLnRvZ2dsZWQgewoJYmFja2dyb3VuZC1jb2xvcjogIzNBOTkyQjsKfQoKLm51bWJlci1zdGF0ZSB7Cglwb3NpdGlvbjogYWJzb2x1dGU7Cglib3JkZXI6IG5vbmU7Cgljb2xvcjogd2hpdGU7CgloZWlnaHQ6IDI1cHg7Cgl3aWR0aDogMjVweDsKCXRleHQtYWxpZ246IGNlbnRlcjsKCWJvcmRlci1yYWRpdXM6IDVweDsKCW1hcmdpbi10b3A6IC03NXB4OwoJbWFyZ2luLWxlZnQ6IDBweDsKCWJhY2tncm91bmQtY29sb3I6ICMzOTZFRkU7Cn0KI2RyYWdnYWJsZS1kZXZpY2UgI2RyYWdnYWJsZS1kZXZpY2UtaGVhZGVyIC50b29sdGlwdGV4dCB7Cglwb3NpdGlvbjphYnNvbHV0ZTsKICAgIHZpc2liaWxpdHk6IGhpZGRlbjsKICAgIHdpZHRoOiBmaXQtY29udGVudDsKICAgIGhlaWdodDogZml0LWNvbnRlbnQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDBCODgyOwogICAgY29sb3I6ICNmZmY7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBib3JkZXItcmFkaXVzOiA2cHg7CiAgICBwYWRkaW5nOiA1cHggMDsKCW1hcmdpbi10b3A6IC0xNDBweDsKCW1hcmdpbi1sZWZ0OiAtMTBweDsKfQojZHJhZ2dhYmxlLWRldmljZSAjZHJhZ2dhYmxlLWRldmljZS1oZWFkZXI6aG92ZXIgLnRvb2x0aXB0ZXh0IHsKICAgIHZpc2liaWxpdHk6IHZpc2libGU7Cn0K"},{"version":3,"sources":["DeviceOnMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DeviceOnMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div ref=\"draggableContainer\" id=\"draggable-device\" :style=\"style\">\n\t\t<div\n\t\t\tid=\"draggable-device-header\"\n\t\t\t@mousedown=\"dragMouseDown\"\n\t\t\tv-on:dblclick= \"isShowMM = !isShowMM\"\n\t\t>\n\t\t\t<img class=\"device-img\" :src=\"require(`../assets/iot-devices/${pic_url}`)\" />\n\t\t\t<span class=\"name\">{{ name }}</span>\n\t\t\t<span class=\"tooltiptext\">Double click to open or close menu</span>\n\t\t</div>\n\t\t<MiniMenu\n\t\t\tv-if=\"isShowMM\"\n\t\t\tv-bind:disabledEdit.sync=\"disabledEdit\"\n\t\t\tv-bind:update.sync=\"update\"\n\t\t\tv-bind:typeDevice.sync=\"pic_url\"\n\t\t\tv-bind:name.sync=\"name\"\n\t\t\tv-bind:label.sync=\"label\"\n\t\t\tv-bind:type.sync=\"type\"\n\t\t\tv-bind:tag.sync=\"tag\"\n\t\t\t@deviceInfor=\"handleEventSubmit\"\n\t\t\t@deleteDevice=\"handleEventDelete\"\n\t\t></MiniMenu>\n\t\t<button class=\"button-toggle\" :class= \"{toggled: isToggled}\" v-if=\"isToggleShow\" @click= \"changeState\">{{isToggled ? 'ON' : 'OFF'}}</button>\n\t\t<input class=\"number-state\" type=\"text\" v-if=\"isNumStateShow\" v-model= newState @change= \"changeNumState\">\n\t\t\n\t</div>\n</template>\n<script>\nimport {config} from './http-common'\nimport MiniMenu from './MiniMenu.vue'\n\nexport default {\n\tname: \"DraggableDiv\",\n\tprops: {\n\t\tpic_url: String,\n\t\tstatus: Boolean,\n\t\tpositionX: String,\n\t\tpositionY: String,\n\t\t\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tisShowMM: false,\n\t\t\tdisabledEdit: false,\n\t\t\tupdate: false,\n\t\t\tisToggleShow: false,\n\t\t\tisNumStateShow: false,\n\t\t\tisToggled: false,\n\t\t\tstate: 0,\n\t\t\tnewState:0,\n\t\t\tname: \"\",\n\t\t\tlabel: \"\",\n\t\t\ttype: \"\",\n\t\t\ttag: \"\",\n\t\t\tpositions: {\n\t\t\t\tclientX: undefined,\n\t\t\t\tclientY: undefined,\n\t\t\t\tmovementX: 0,\n\t\t\t\tmovementY: 0,\n\t\t\t},\n\t\t};\n\t},\n\tcomponents: {\n\t\tMiniMenu,\n\t},\n\tcomputed: {\n\t\tstyle() {\n\t\t\treturn {\n\t\t\t\tleft: this.positionX,\n\t\t\t\ttop: this.positionY,\n\t\t\t};\n\t\t},\n\t},\n\tmethods: {\n\t\tdragMouseDown: function(event) {\n\t\t\tevent.preventDefault();\n\t\t\t// get the mouse cursor position at startup:\n\t\t\tthis.positions.clientX = event.clientX;\n\t\t\tthis.positions.clientY = event.clientY;\n\t\t\tdocument.onmousemove = this.elementDrag;\n\t\t\tdocument.onmouseup = this.closeDragElement;\n\t\t},\n\t\telementDrag: function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.positions.movementX = this.positions.clientX - event.clientX;\n\t\t\tthis.positions.movementY = this.positions.clientY - event.clientY;\n\t\t\tthis.positions.clientX = event.clientX;\n\t\t\tthis.positions.clientY = event.clientY;\n\t\t\t// set the element's new position:\n\t\t\tthis.$refs.draggableContainer.style.top =\n\t\t\t\tthis.$refs.draggableContainer.offsetTop -\n\t\t\t\tthis.positions.movementY +\n\t\t\t\t\"px\";\n\t\t\tthis.$refs.draggableContainer.style.left =\n\t\t\t\tthis.$refs.draggableContainer.offsetLeft -\n\t\t\t\tthis.positions.movementX +\n\t\t\t\t\"px\";\n\t\t},\n\t\tcloseDragElement() {\n\t\t\tdocument.onmouseup = null;\n\t\t\tdocument.onmousemove = null;\n\t\t},\n\t\thandleEventDelete: function() {\n\t\t\tthis.$emit(\"remove\");\n\t\t},\n\t\thandleEventSubmit: function(name, label, type, tag) {\n\t\t\tthis.name = name\n\t\t\tthis.label = label\n\t\t\tthis.type = type\n\t\t\tthis.tag = tag\n\t\t\tif(type == 'Switch') {\n\t\t\t\tthis.isNumStateShow = false\n\t\t\t\tthis.isToggleShow = true\n\t\t\t}\n\t\t\telse if(type =='Number'){\n\t\t\t\tthis.isNumStateShow = true\n\t\t\t\tthis.isToggleShow = false\n\t\t\t}\n\t\t\tthis.isShowMM = false\n\t\t\tthis.disabledEdit = true\n\t\t\tthis.update = true\n\t\t\tthis.fetchState()\n\t\t},\n\t\tchangeState: function() {\n\t\t\tthis.isToggled = !this.isToggled\n\t\t\tconst url = `items/` + this.name\n\t\t\tlet data = ''\n\t\t\tif(this.isToggled) data = 'ON'\n\t\t\telse data = 'OFF'\n\t\t\tvar HTTP = config\n\t\t\tHTTP.post(url,data,{headers:{'Content-Type': 'text/plain'}}).then(response=>{\n\t\t\t\tresponse.data\n\t\t\t})\n\t\t},\n\t\tchangeNumState: function() {\n\t\t\tif(isNaN(this.newState)){\n\t\t\t\talert(\"Numer Only !!!\")\n\t\t\t\tthis.newState = this.state\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.state = this.newState\n\t\t\t\tconst url = `items/` + this.name\n\t\t\t\tvar HTTP = config\n\t\t\t\tHTTP.post(url,this.state,{headers:{'Content-Type': 'text/plain'}}).then(response=>{\n\t\t\t\t\tresponse.data\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\tfetchState: function() {\n\t\t\tconsole.log(\"fetchDta start\")\n\t\t\tvar es = new EventSource(\n\t\t\t\t\"http://localhost:8080/rest/events/states\",\n\t\t\t\t{\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t\theaders:{\n\t\t\t\t\t\t'Access-Control-Allow-Credentials': true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\tvar items = [this.name]\n\t\t\tes.addEventListener('ready',(event)=>{\n\t\t\t\tvar HTTP = config\n\t\t\t\tHTTP.post(`/events/states/${event.data}`, \n\t\t\t\t\titems\n\t\t\t\t)\n\t\t\t})\n\t\t\tes.addEventListener(\n\t\t\t\t\"error\",\n\t\t\t\t(event) => {\n\t\t\t\t\tif (event.readyState == EventSource.CLOSED) {\n\t\t\t\t\t\tconsole.log(\"Event was closed\");\n\t\t\t\t\t\tconsole.log(EventSource);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tes.addEventListener(\n\t\t\t\t\"message\",\n\t\t\t\t(event) => {\n\t\t\t\t\tif(this.type == \"Switch\"){\n\t\t\t\t\t\tif(event.data.search(\"ON\") != -1) this.isToggled = true\n\t\t\t\t\t\telse if(event.data.search(\"OFF\" != -1)) this.isToggled = false\n\t\t\t\t\t}\n\t\t\t\t\telse if(this.type == \"Number\"){\n\t\t\t\t\t\tconsole.log(event.data)\n\t\t\t\t\t\tlet start = event.data.lastIndexOf(':') + 2\n\t\t\t\t\t\tlet end = event.data.lastIndexOf('\"') \n\t\t\t\t\t\tlet data = event.data.slice(start,end)\n\t\t\t\t\t\tif(data != \"NULL\"){\n\t\t\t\t\t\t\tthis.newState = Number(data)\n\t\t\t\t\t\t\tthis.state = this.newState\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t},\n};\n</script>\n\n<style>\n#draggable-device {\n\tposition: absolute;\n\tz-index: 9;\n\twidth: 100px;\n\theight: 100px;\n\t\n}\n#draggable-device-header {\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 75px;\n\theight: 75px;\n\tbackground-color: rgb(96,194,119,0.75);\n\tborder-radius: 50%;\n\tz-index: 10;\n}\n#draggable-device #draggable-device-header img {\n\tposition: relative;\n\tdisplay: block;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 10px;\n\tmargin-bottom: 10px;\n\twidth: 50px;\n\theight: 50px;\n\tpadding-top: 12px;\n}\n#draggable-device #draggable-device-header .name {\n\tmargin-top: 2px;\n\tdisplay: block;\n\ttext-align: center;\n\tcolor: black;\n}\n.button-toggle {\n\tposition: absolute;\n\tborder: none;\n\tcolor: white;\n\theight: 25px;\n\twidth: 50px;\n\tborder-radius: 5px;\n\tmargin-top: -75px;\n\tmargin-left: 50px;\n\tbackground-color: #C32110;\n}\n.button-toggle.toggled {\n\tbackground-color: #3A992B;\n}\n\n.number-state {\n\tposition: absolute;\n\tborder: none;\n\tcolor: white;\n\theight: 25px;\n\twidth: 25px;\n\ttext-align: center;\n\tborder-radius: 5px;\n\tmargin-top: -75px;\n\tmargin-left: 0px;\n\tbackground-color: #396EFE;\n}\n#draggable-device #draggable-device-header .tooltiptext {\n\tposition:absolute;\n    visibility: hidden;\n    width: fit-content;\n    height: fit-content;\n    background-color: #40B882;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 0;\n\tmargin-top: -140px;\n\tmargin-left: -10px;\n}\n#draggable-device #draggable-device-header:hover .tooltiptext {\n    visibility: visible;\n}\n</style>\n"]}]}